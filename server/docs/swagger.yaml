openapi: 3.0.0
info:
  title: StyleSnap API
  version: 1.0.0
schemes:
  - http
  - https
paths:
  /auth/signup:
    post:
      tags:
        - Authentication
      summary: Sign up a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAuth"
            example:
              username: johndoe
              password: Password123
              email: johndoe@gmail.com
      responses:
        201:
          description: User registration successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
              example:
                success: true
                message: User registration successful.
        422:
          description: Invalid user registration data.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
              example:
                success: false
                message: Invalid user registration data.
                errors:
                  - Username must be at least 6 characters long.
                  - Password must be at least 8 characters long.
                  - Email must be a valid email address.
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAuth"
            examples:
              member:
                value:
                  username: johndoe
                  password: Password123
                  email: johndoe@gmail.com
              admin:
                value:
                  username: adminuser
                  password: AdminPass123
                  email: admin@gmail.com
      responses:
        200:
          description: User login successful.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      accessToken:
                        type: string
              example:
                success: true
                message: User login successful.
                accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJTdHlsZVNuYXAiLCJzdWIiOiJ
  /auth/user:
    post:
      tags:
        - Authentication
        - Current User
      summary: Verify user authentication
      security:
        - bearerAuth: []
      responses:
        200:
          description: Authentication successful.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      wardrobeId:
                        type: integer
              example:
                success: true
                message: Authentication successful.
                user:
                  user_id: 1
                  username: johndoe
                  email: johndoe@gmail.com
                  is_admin: false
        401:
          description: Authentication failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
              example:
                success: false
                message: Authentication failed.
  /user/wardrobes:
    post:
      tags:
        - Wardrobe
        - Current User
      summary: Add a new wardrobe of current User
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: My Wardrobe
      responses:
        201:
          description: Wardrobe creation successful.
          content:
            application/json:
              allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - type: object
                  properties:
                    wardrobeId:
                      type: integer
              example:
                success: true
                message: Wardrobe creation successful.
                wardrobeId: 1
    get:
      tags:
        - Wardrobe
        - Current User
      summary: Get all wardrobes of current User
      security:
        - bearerAuth: []
      responses:
        200:
          description: Wardrobe retrieval successful.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      wardrobes:
                        type: array
                        items:
                          type: object
                          properties:
                            wardrobeId:
                              type: integer
                            owner:
                              type: integer
                            name:
                              type: string
              example:
                success: true
                message: User wardrobes retrieval successful.
                wardrobes:
                  - wardrobe_id: 1
                    owner: 1
                    name: My Wardrobe
                  - wardrobe_id: 2
                    owner: 1
                    name: My Other Wardrobe
  /wardrobes/{wardrobeId}:
    get:
      tags:
        - Wardrobe
      summary: Get a wardrobe
      security:
        - bearerAuth: []
      parameters:
        - name: wardrobeId
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Wardrobe retrieval successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WardrobeBase"
              example:
                success: true
                message: Wardrobe retrieval successful.
                wardrobe:
                  wardrobe_id: 1
                  owner: 1
                  name: My Wardrobe
        404:
          description: Wardrobe not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
              example:
                success: false
                message: Wardrobe not found.
    put:
      tags:
        - Wardrobe
      summary: Update a wardrobe
      security:
        - bearerAuth: []
      parameters:
        - name: wardrobeId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: My New Wardrobe
      responses:
        200:
          description: Wardrobe update successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
              example:
                success: true
                message: Wardrobe update successful.
        404:
          description: Wardrobe not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
              example:
                success: false
                message: Wardrobe not found.
    delete:
      tags:
        - Wardrobe
      summary: Delete a wardrobe
      security:
        - bearerAuth: []
      parameters:
        - name: wardrobeId
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Wardrobe deletion successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
              example:
                success: true
                message: Wardrobe deletion successful.
components:
  schemas:
    BaseResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
    500Response:
      $ref: "#/components/schemas/BaseResponse"
      example:
        message: Internal server error.
    UserBase:
      type: object
      properties:
        username:
          type: string
          example: johndoe
        email:
          type: string
          example: johndoe@gmail.com
    UserAuth:
      allOf:
        - $ref: "#/components/schemas/UserBase"
        - type: object
          properties:
            password:
              type: string
              example: Password123
    UserInfo:
      allOf:
        - $ref: "#/components/schemas/UserBase"
        - type: object
          properties:
            user_id:
              type: integer
              example: 1
            is_admin:
              type: boolean
              example: false
    WardrobeBase:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          properties:
            wardrobes:
              type: object
              properties:
                wardrobeId:
                  type: integer
                owner:
                  type: integer
                name:
                  type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
